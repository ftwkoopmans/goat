import{s as bn,p as Qt,D as vn,f as u,a as w,l as P,A as gn,g as d,d as l,c as I,h as R,B as S,m as W,j as _,C as Z,k as V,E as Qe,x as s,i as v,F as E,G as Xt,H as _n,z as Xe,n as Ce,y as pn,e as $t}from"../chunks/scheduler.7144be00.js";import{S as yn,i as wn,f as en,b as tn,d as nn,m as ln,a as sn,t as an,e as on}from"../chunks/index.3da70c46.js";import{p as In,S as rn,g as Cn,f as kn,c as Tn,F as An,l as xn}from"../chunks/stores.48c2654a.js";import{i as U,a as Rn,d as En}from"../chunks/util.14f89131.js";import{p as Gn}from"../chunks/stores.79d9616a.js";import{e as ce,w as un}from"../chunks/singletons.8a086be2.js";function Dn(e){const t=e.length,r=e[0].map(i=>i.toLowerCase()),f=r.indexOf("symbol");let a;const p=f+1,o=[];if(f===-1)throw new Error("input genelist table must contain headers on the first line. Cannot find required header for column; 'symbol' (should contain character/string values)");if(r.filter(i=>i==="symbol").length>1)throw new Error("input genelist table is invalid because it contains multiple columns with the name 'symbol' (remove redundant columns)");for(let i=1;i<t;i++)if(e[i].length===0)o.push("");else{if(a=e[i],a.length<p)throw new Error("line "+(i+1)+" is invalid, it contains fewer values/columns than expected");o.push(a[f].toUpperCase())}return o}function Sn(e,t,r){const f=new RegExp("[ ,;]"),a=[...new Set(e.filter(i=>i.length>=2&&f.test(i)===!1))],p=[],o=e.length;for(let i=0;i<o;i++)if(e[i]==="")p.push([]);else{const m=[...new Set(e[i].split(/[ ,;]+/))].filter(b=>b.length>=2),A=m.length;let c;if(A===1)c=t[m[0]];else if(A>1&&r!=="skipAmbiguous")if(r==="retainFirstSucces")for(let b=0;b<A&&c===void 0;b++)c=t[m[b]];else if(r==="retainFirstSuccesNovel")for(let b=0;b<A&&c===void 0;b++)a.indexOf(m[b])===-1&&(c=t[m[b]]);else r==="retainFirst"&&(c=t[m[0]]);p.push(c===void 0?"":c)}return p}async function Hn(e){const t=await In(e);if(Array.isArray(t)===!1||t.length<2)throw new Error("input genelist table must not be empty");return t}async function Vn(e,t,r,f){let a=[...e];const p=a.length,o=Sn(t,r.lookupGene,f);let i=[],m;for(let y=0;y<a[0].length;y++)m=a[0][y],m&&["gene","hgnc_id","hgnc_symbol"].indexOf(m.toLowerCase())!==-1&&i.push(y);const A=i.length;if(A>0){i=i.reverse();for(let y=0;y<p;y++)for(let B=0;B<A;B++)a[y].splice(i[B],1)}a[0]=a[0].concat(["gene","hgnc_id","hgnc_symbol"]);let c,b;for(let y=1;y<p;y++)c=o[y-1],c===""?a[y]=a[y].concat(["","",""]):(b=r.lookupMeta[c],b===void 0?a[y]=a[y].concat(["","",""]):a[y]=a[y].concat([b.entrez_id,c,b.hgnc_symbol]));return a}const{document:Et}=Cn;function Ln(e){let t,r="status:",f,a,p,o,i="no genelist loaded yet";return{c(){t=u("b"),t.textContent=r,f=w(),a=u("br"),p=w(),o=u("div"),o.textContent=i,this.h()},l(m){t=d(m,"B",{"data-svelte-h":!0}),S(t)!=="svelte-jrlymk"&&(t.textContent=r),f=I(m),a=d(m,"BR",{}),p=I(m),o=d(m,"DIV",{class:!0,"data-svelte-h":!0}),S(o)!=="svelte-1x7jbfu"&&(o.textContent=i),this.h()},h(){_(o,"class","alert")},m(m,A){v(m,t,A),v(m,f,A),v(m,a,A),v(m,p,A),v(m,o,A)},p:pn,d(m){m&&(l(t),l(f),l(a),l(p),l(o))}}}function Bn(e){let t,r="filename:",f,a=e[1].filename+"",p,o,i,m,A="number of rows with a gene symbol:",c,b=e[1].countGenes+"",y,B;return{c(){t=u("b"),t.textContent=r,f=w(),p=P(a),o=u("br"),i=w(),m=u("b"),m.textContent=A,c=w(),y=P(b),B=u("br")},l(g){t=d(g,"B",{"data-svelte-h":!0}),S(t)!=="svelte-nlrd5p"&&(t.textContent=r),f=I(g),p=W(g,a),o=d(g,"BR",{}),i=I(g),m=d(g,"B",{"data-svelte-h":!0}),S(m)!=="svelte-1vlyilb"&&(m.textContent=A),c=I(g),y=W(g,b),B=d(g,"BR",{})},m(g,G){v(g,t,G),v(g,f,G),v(g,p,G),v(g,o,G),v(g,i,G),v(g,m,G),v(g,c,G),v(g,y,G),v(g,B,G)},p(g,G){G&2&&a!==(a=g[1].filename+"")&&Ce(p,a),G&2&&b!==(b=g[1].countGenes+"")&&Ce(y,b)},d(g){g&&(l(t),l(f),l(p),l(o),l(i),l(m),l(c),l(y),l(B))}}}function Nn(e){let t,r="error while loading your genelist:",f,a,p;return{c(){t=u("b"),t.textContent=r,f=w(),a=u("div"),p=P(e[3]),this.h()},l(o){t=d(o,"B",{"data-svelte-h":!0}),S(t)!=="svelte-rtmaud"&&(t.textContent=r),f=I(o),a=d(o,"DIV",{class:!0});var i=R(a);p=W(i,e[3]),i.forEach(l),this.h()},h(){_(a,"class","alert")},m(o,i){v(o,t,i),v(o,f,i),v(o,a,i),s(a,p)},p(o,i){i&8&&Ce(p,o[3])},d(o){o&&(l(t),l(f),l(a))}}}function dn(e){let t,r="error while comparing your data to the lookup tables:",f,a,p;return{c(){t=u("b"),t.textContent=r,f=w(),a=u("div"),p=P(e[4]),this.h()},l(o){t=d(o,"B",{"data-svelte-h":!0}),S(t)!=="svelte-133bokb"&&(t.textContent=r),f=I(o),a=d(o,"DIV",{class:!0});var i=R(a);p=W(i,e[4]),i.forEach(l),this.h()},h(){_(a,"class","alert")},m(o,i){v(o,t,i),v(o,f,i),v(o,a,i),s(a,p)},p(o,i){i&16&&Ce(p,o[4])},d(o){o&&(l(t),l(f),l(a))}}}function Mn(e){let t,r="No results yet; load your genelist and press START...";return{c(){t=u("div"),t.textContent=r},l(f){t=d(f,"DIV",{"data-svelte-h":!0}),S(t)!=="svelte-fomj7a"&&(t.textContent=r)},m(f,a){v(f,t,a)},p:pn,d(f){f&&l(t)}}}function Fn(e){let t,r=e[1].countSuccess+"",f,a,p=e[1].countGenes+"",o,i,m,A,c,b,y,B="download results",g,G,Q,F,L=!!e[5]&&fn(e);return{c(){t=u("div"),f=P(r),a=P(" / "),o=P(p),i=P(` genes in your table were mapped to Human gene\r
				identifiers.`),m=w(),A=u("br"),c=w(),b=u("div"),y=u("button"),y.textContent=B,g=w(),L&&L.c(),G=$t(),this.h()},l(k){t=d(k,"DIV",{});var x=R(t);f=W(x,r),a=W(x," / "),o=W(x,p),i=W(x,` genes in your table were mapped to Human gene\r
				identifiers.`),x.forEach(l),m=I(k),A=d(k,"BR",{}),c=I(k),b=d(k,"DIV",{});var he=R(b);y=d(he,"BUTTON",{class:!0,"data-svelte-h":!0}),S(y)!=="svelte-c9mrqp"&&(y.textContent=B),he.forEach(l),g=I(k),L&&L.l(k),G=$t(),this.h()},h(){_(y,"class","btn btn-action")},m(k,x){v(k,t,x),s(t,f),s(t,a),s(t,o),s(t,i),v(k,m,x),v(k,A,x),v(k,c,x),v(k,b,x),s(b,y),v(k,g,x),L&&L.m(k,x),v(k,G,x),Q||(F=E(y,"click",e[15]),Q=!0)},p(k,x){x&2&&r!==(r=k[1].countSuccess+"")&&Ce(f,r),x&2&&p!==(p=k[1].countGenes+"")&&Ce(o,p),k[5]?L?L.p(k,x):(L=fn(k),L.c(),L.m(G.parentNode,G)):L&&(L.d(1),L=null)},d(k){k&&(l(t),l(m),l(A),l(c),l(b),l(g),l(G)),L&&L.d(k),Q=!1,F()}}}function fn(e){let t,r="error while preparing data for download:",f,a,p;return{c(){t=u("b"),t.textContent=r,f=w(),a=u("div"),p=P(e[5]),this.h()},l(o){t=d(o,"B",{"data-svelte-h":!0}),S(t)!=="svelte-ncd7xk"&&(t.textContent=r),f=I(o),a=d(o,"DIV",{class:!0});var i=R(a);p=W(i,e[5]),i.forEach(l),this.h()},h(){_(a,"class","alert")},m(o,i){v(o,t,i),v(o,f,i),v(o,a,i),s(a,p)},p(o,i){i&32&&Ce(p,o[5])},d(o){o&&(l(t),l(f),l(a))}}}function jn(e){let t,r,f,a,p,o='<img src="./android-chrome-192x192.png" width="40" height="40" alt="GOAT"/>',i,m,A="Home",c,b,y="GOAT online",B,g,G="gene ID mapping",Q,F,L="Documentation",k,x,he=`<h1>Gene ID mapping</h1> <div style="margin: 0px 25px 0px 25px; text-align: center;"><h3>With this tool you can map gene symbols in an Excel/CSV/TSV table to Human gene identifiers.
			<br/>
			The output will contain columns with gene IDs and the respective official gene symbol. It can be
			directly used as input for the GOAT online tool (it&#39;ll only use rows where mapping was successful).</h3> <img src="beta.png" width="200px" alt="BETA VERSION"/></div>`,ke,D,oe,je="<h2>Your input data</h2>",Be,me,be,re,X,$,Ne,h,T,K,ve="drag&drop a genelist file or click to open a file dialog",$e,et,tt,Me,nt,ue,lt,st,Te,Gt=`<div class="helpSettings">Importantly, your input genelist / gene table must be prepared in a format that is
						compatible with this tool.
						<ul><li class="svelte-1b7cd8l">File format: either CSV, TSV or Excel (.xlsx file, data on the first sheet)</li> <li class="svelte-1b7cd8l">Required column: <b>symbol</b> (column name must match exactly)</li></ul>
						The documentation below shows an example table that one might use as input.</div>`,it,ge,qe,H,_e,Dt="<h2>Settings</h2>",at,ye,St=`Rows where the gene symbol column contains a delimiter (i.e. semicolon, comma or whitespace) are\r
		assumed to refer to multiple genes. If there are more than 2 unique gene symbols (on a row), how\r
		should these be mapped to human gene identifiers?`,ot,Ae,xe,j,rt,ut,Re,Ee,q,dt,ft,Ge,De,O,ct,pt,Se,He,z,ht,mt,bt,vt,le,se,gt,Oe,_t,de,yt,wt,ze,ie,we,Ht="<h2>Results</h2>",It,Ie,Ue,ae,Vt=`<div class="divH2"><h2>Settings documentation</h2></div> <p>To illustrate the problem of ambiguous genes/symbols and solutions offered by above options;</p> <table class="tbl-bordered"><thead><tr><th>symbol</th><th>effectsize</th><th class="note svelte-1b7cd8l">note</th></tr></thead> <tbody><tr><td>GRIA1</td><td>1.0</td> <td class="note svelte-1b7cd8l">protein group maps to exactly 1 gene</td></tr> <tr><td>GRIA2</td><td>1.0</td> <td class="note svelte-1b7cd8l">protein group maps to exactly 1 gene</td></tr> <tr><td>GRIA1;GRIA2</td><td>1.5</td> <td class="note svelte-1b7cd8l">ambiguous, one might want to use only the first entry (&#39;leading&#39; gene)</td></tr> <tr><td>GRIA3;GRIA4</td><td>1.5</td> <td class="note svelte-1b7cd8l">ambiguous, but this row contributes a new gene (GRIA3)</td></tr> <tr><td>tr|A8K0K0|A8K0K0_HUMAN;GRIA2;GRIA3</td><td>2.0</td> <td class="note svelte-1b7cd8l">ambiguous, but the first entry has no gene symbol only an accession</td></tr></tbody></table> <div><ol><li class="svelte-1b7cd8l">With option 1, <i>&quot;try to map only the first gene symbol&quot;</i><br/>
				the output will contain a gene ID for all rows except the last (respectively, GRIA1, GRIA2, GRIA1,
				GRIA3, -).</li> <li class="svelte-1b7cd8l">With option 2, <i>&quot;use the first gene symbol that can be successfully mapped&quot;</i><br/>
				all rows will be mapped to a gene ID (respectively, GRIA1, GRIA2, GRIA1, GRIA3, GRIA2).</li> <li class="svelte-1b7cd8l">With option 3, <i>&quot;analogous to above, but skip if there exist a non-ambiguous row that contains the first
					(successfully mapped) gene symbol&quot;</i><br/>
				rows 3 and 5 are skipped because there exist unambiguous entries for GRIA1 and GRIA2 (respectively,
				GRIA1, GRIA2, -, GRIA3, -). This approach favors rows that are unambiguous and supplements this
				only with ambiguous rows that contribute new information (genes).</li> <li class="svelte-1b7cd8l">With option 4, <i>&quot;skip rows with ambiguous symbols altogether&quot;</i><br/>
				only the first 2 rows are mapped (respectively, GRIA1, GRIA2, -, -, -).</li></ol></div> <p>When chosing the option most appropriate for your dataset, keep in mind that the geneset
		analysis in GOAT online will retain only 1 row per unique gene. If multiple rows/entries are
		available for a gene, the one with the lowest/best p-value is retained. If there are no gene
		p-values in your data/table, the best absolute effectsize is retained (across multiple entries
		for the same gene).</p>`,Pe,fe,Lt=`<div class="divH2"><h2>What data is used / how is gene ID mapping done?</h2></div> <div><p>We created a lookup table using official gene symbols and aliases/synonyms based on
			information provided by <a href="https://www.genenames.org" target="_blank" rel="nofollow">HGNC</a>, it is stored on this webserver. Any synonyms that are listed by HGNC as entries for
			multiple genes are considered ambiguous and are discarded.</p> <p>This tool downloads the lookup table (mapping from symbols to gene IDs) to your computer and
			then proceeds with matching between your input table and HGNC gene information. So your
			table/data never leaves your computer and remains private at all times.</p></div>`,ee,Ct,kt,Bt;function hn(n){e[17](n)}let Nt={colour:"black",size:"2.5em"};e[7]!==void 0&&(Nt.show=e[7]),ue=new rn({props:Nt}),Qt.push(()=>en(ue,"show",hn));function Mt(n,C){return n[3]?Nn:typeof n[1]=="object"&&n[1].ok===!0?Bn:Ln}let We=Mt(e),te=We(e);function mn(n){e[28](n)}let Ft={colour:"black",size:"1.5em"};e[8]!==void 0&&(Ft.show=e[8]),de=new rn({props:Ft}),Qt.push(()=>en(de,"show",mn));let N=!!e[4]&&dn(e);function jt(n,C){return n[8]===!1&&typeof n[1]=="object"&&n[1].done===!0?Fn:Mn}let Ke=jt(e),ne=Ke(e);return Ct=vn(e[24][0]),{c(){t=u("meta"),r=w(),f=u("nav"),a=u("div"),p=u("a"),p.innerHTML=o,i=w(),m=u("a"),m.textContent=A,c=w(),b=u("a"),b.textContent=y,B=w(),g=u("a"),g.textContent=G,Q=w(),F=u("a"),F.textContent=L,k=w(),x=u("div"),x.innerHTML=he,ke=w(),D=u("div"),oe=u("div"),oe.innerHTML=je,Be=w(),me=u("table"),be=u("tbody"),re=u("tr"),X=u("td"),$=u("input"),Ne=w(),h=u("div"),T=u("p"),K=u("i"),K.textContent=ve,$e=w(),et=u("br"),tt=w(),Me=u("i"),nt=w(),tn(ue.$$.fragment),st=w(),Te=u("td"),Te.innerHTML=Gt,it=w(),ge=u("div"),te.c(),qe=w(),H=u("div"),_e=u("div"),_e.innerHTML=Dt,at=w(),ye=u("div"),ye.textContent=St,ot=w(),Ae=u("div"),xe=u("label"),j=u("input"),rt=P(`\r
\r
			try to map only the first gene symbol`),ut=w(),Re=u("div"),Ee=u("label"),q=u("input"),dt=P(`\r
\r
			use the first gene symbol that can be successfully mapped`),ft=w(),Ge=u("div"),De=u("label"),O=u("input"),ct=P(`\r
\r
			analogous to above, but skip if there exist a non-ambiguous row that contains the first\r
			(successfully mapped) gene symbol`),pt=w(),Se=u("div"),He=u("label"),z=u("input"),ht=P(`\r
\r
			skip rows with ambiguous symbols altogether`),mt=w(),bt=u("br"),vt=w(),le=u("div"),se=u("button"),gt=P("START"),_t=w(),tn(de.$$.fragment),wt=w(),N&&N.c(),ze=w(),ie=u("div"),we=u("div"),we.innerHTML=Ht,It=w(),Ie=u("div"),ne.c(),Ue=w(),ae=u("div"),ae.innerHTML=Vt,Pe=w(),fe=u("div"),fe.innerHTML=Lt,this.h()},l(n){const C=gn("svelte-1bjj788",Et.head);t=d(C,"META",{name:!0,content:!0}),C.forEach(l),r=I(n),f=d(n,"NAV",{});var Y=R(f);a=d(Y,"DIV",{style:!0});var Fe=R(a);p=d(Fe,"A",{href:!0,"data-svelte-h":!0}),S(p)!=="svelte-16w8u87"&&(p.innerHTML=o),Fe.forEach(l),i=I(Y),m=d(Y,"A",{href:!0,style:!0,"data-svelte-h":!0}),S(m)!=="svelte-1ec66ou"&&(m.textContent=A),c=I(Y),b=d(Y,"A",{href:!0,style:!0,"data-svelte-h":!0}),S(b)!=="svelte-2trhjx"&&(b.textContent=y),B=I(Y),g=d(Y,"A",{href:!0,style:!0,"data-svelte-h":!0}),S(g)!=="svelte-1cgo0ae"&&(g.textContent=G),Q=I(Y),F=d(Y,"A",{href:!0,style:!0,"data-svelte-h":!0}),S(F)!=="svelte-amifqa"&&(F.textContent=L),Y.forEach(l),k=I(n),x=d(n,"DIV",{class:!0,"data-svelte-h":!0}),S(x)!=="svelte-15c5tkv"&&(x.innerHTML=he),ke=I(n),D=d(n,"DIV",{class:!0,style:!0,tabindex:!0,role:!0,"aria-pressed":!0});var Ve=R(D);oe=d(Ve,"DIV",{class:!0,"data-svelte-h":!0}),S(oe)!=="svelte-kki37h"&&(oe.innerHTML=je),Be=I(Ve),me=d(Ve,"TABLE",{});var qt=R(me);be=d(qt,"TBODY",{});var Ot=R(be);re=d(Ot,"TR",{});var Ye=R(re);X=d(Ye,"TD",{style:!0});var Ze=R(X);$=d(Ze,"INPUT",{id:!0,type:!0,accept:!0,style:!0}),Ne=I(Ze),h=d(Ze,"DIV",{id:!0,tabindex:!0,role:!0,"aria-pressed":!0});var zt=R(h);T=d(zt,"P",{});var pe=R(T);K=d(pe,"I",{"data-svelte-h":!0}),S(K)!=="svelte-uobxa9"&&(K.textContent=ve),$e=I(pe),et=d(pe,"BR",{}),tt=I(pe),Me=d(pe,"I",{class:!0}),R(Me).forEach(l),nt=I(pe),nn(ue.$$.fragment,pe),pe.forEach(l),zt.forEach(l),Ze.forEach(l),st=I(Ye),Te=d(Ye,"TD",{"data-svelte-h":!0}),S(Te)!=="svelte-i76nm3"&&(Te.innerHTML=Gt),Ye.forEach(l),Ot.forEach(l),qt.forEach(l),it=I(Ve),ge=d(Ve,"DIV",{style:!0});var Ut=R(ge);te.l(Ut),Ut.forEach(l),Ve.forEach(l),qe=I(n),H=d(n,"DIV",{class:!0,style:!0});var M=R(H);_e=d(M,"DIV",{class:!0,"data-svelte-h":!0}),S(_e)!=="svelte-1etyc0x"&&(_e.innerHTML=Dt),at=I(M),ye=d(M,"DIV",{style:!0,"data-svelte-h":!0}),S(ye)!=="svelte-atx6a9"&&(ye.textContent=St),ot=I(M),Ae=d(M,"DIV",{style:!0});var Pt=R(Ae);xe=d(Pt,"LABEL",{});var Tt=R(xe);j=d(Tt,"INPUT",{type:!0,name:!0}),rt=W(Tt,`\r
\r
			try to map only the first gene symbol`),Tt.forEach(l),Pt.forEach(l),ut=I(M),Re=d(M,"DIV",{style:!0});var Wt=R(Re);Ee=d(Wt,"LABEL",{});var At=R(Ee);q=d(At,"INPUT",{type:!0,name:!0}),dt=W(At,`\r
\r
			use the first gene symbol that can be successfully mapped`),At.forEach(l),Wt.forEach(l),ft=I(M),Ge=d(M,"DIV",{style:!0});var Kt=R(Ge);De=d(Kt,"LABEL",{});var xt=R(De);O=d(xt,"INPUT",{type:!0,name:!0}),ct=W(xt,`\r
\r
			analogous to above, but skip if there exist a non-ambiguous row that contains the first\r
			(successfully mapped) gene symbol`),xt.forEach(l),Kt.forEach(l),pt=I(M),Se=d(M,"DIV",{style:!0});var Yt=R(Se);He=d(Yt,"LABEL",{});var Rt=R(He);z=d(Rt,"INPUT",{type:!0,name:!0}),ht=W(Rt,`\r
\r
			skip rows with ambiguous symbols altogether`),Rt.forEach(l),Yt.forEach(l),mt=I(M),bt=d(M,"BR",{}),vt=I(M),le=d(M,"DIV",{});var Le=R(le);se=d(Le,"BUTTON",{class:!0,style:!0});var Zt=R(se);gt=W(Zt,"START"),Zt.forEach(l),_t=I(Le),nn(de.$$.fragment,Le),wt=I(Le),N&&N.l(Le),Le.forEach(l),M.forEach(l),ze=I(n),ie=d(n,"DIV",{class:!0,style:!0});var Je=R(ie);we=d(Je,"DIV",{class:!0,"data-svelte-h":!0}),S(we)!=="svelte-1lm4it4"&&(we.innerHTML=Ht),It=I(Je),Ie=d(Je,"DIV",{style:!0});var Jt=R(Ie);ne.l(Jt),Jt.forEach(l),Je.forEach(l),Ue=I(n),ae=d(n,"DIV",{class:!0,style:!0,"data-svelte-h":!0}),S(ae)!=="svelte-1ydgkiu"&&(ae.innerHTML=Vt),Pe=I(n),fe=d(n,"DIV",{class:!0,style:!0,"data-svelte-h":!0}),S(fe)!=="svelte-1f7z8uw"&&(fe.innerHTML=Lt),this.h()},h(){Et.title="Map gene symbols to human gene identifiers",_(t,"name","description"),_(t,"content","Map gene symbols in your input table to human gene identifiers (NCBI Entrez and HGNC)"),_(p,"href",ce+"/"),Z(p,"active",U(e[6],ce+"/index.html")||U(e[6],"github.io/goat/")),V(a,"padding","4px"),V(a,"margin-left","20px"),_(m,"href",ce+"/"),V(m,"margin-left","5px"),Z(m,"active",U(e[6],ce+"/index.html")||U(e[6],"github.io/goat/")),_(b,"href",ce+"/goat.html"),V(b,"margin-left","40px"),Z(b,"active",U(e[6],"/goat.html")),_(g,"href",ce+"/genemap.html"),V(g,"margin-left","40px"),Z(g,"active",U(e[6],"/genemap")),_(F,"href",ce+"/docs.html"),V(F,"margin-left","40px"),Z(F,"active",U(e[6],"/docs")),_(x,"class","divH1"),_(oe,"class","divH2"),_($,"id","genelistFileDialog"),_($,"type","file"),_($,"accept",".csv,.tsv,.xlsx"),$.multiple="false",V($,"display","none"),_(Me,"class","dropicon"),_(h,"id","genelist_dropzone"),_(h,"tabindex","0"),_(h,"role","button"),_(h,"aria-pressed","false"),Z(h,"is-dragover",e[0]===!0),V(X,"vertical-align","top"),V(X,"width","300px"),_(ge,"style",""),_(D,"class","pnlResults"),V(D,"margin-bottom","50px"),_(D,"tabindex","-1"),_(D,"role","button"),_(D,"aria-pressed","false"),_(_e,"class","divH2"),V(ye,"margin","10px 0px 10px 0px"),_(j,"type","radio"),_(j,"name","inputSymbolRetain"),j.__value="retainFirst",Qe(j,j.__value),V(Ae,"margin","5px"),_(q,"type","radio"),_(q,"name","inputSymbolRetain"),q.__value="retainFirstSucces",Qe(q,q.__value),V(Re,"margin","5px"),_(O,"type","radio"),_(O,"name","inputSymbolRetain"),O.__value="retainFirstSuccesNovel",Qe(O,O.__value),V(Ge,"margin","5px"),_(z,"type","radio"),_(z,"name","inputSymbolRetain"),z.__value="skipAmbiguous",Qe(z,z.__value),V(Se,"margin","5px"),_(se,"class","btn btn-action"),V(se,"margin-right","5px"),se.disabled=Oe=e[8]===!0||e[7]===!0||!(typeof e[1]=="object"&&e[1].ok===!0),_(H,"class","pnlResults"),V(H,"margin-bottom","50px"),_(we,"class","divH2"),V(Ie,"margin","10px 0px 10px 0px"),_(ie,"class","pnlResults"),V(ie,"margin-bottom","100px"),_(ae,"class","pnlResults"),V(ae,"margin-bottom","100px"),V(ae,"padding-right","50px"),_(fe,"class","pnlResults"),V(fe,"margin-bottom","100px"),Ct.p(j,q,O,z)},m(n,C){s(Et.head,t),v(n,r,C),v(n,f,C),s(f,a),s(a,p),s(f,i),s(f,m),s(f,c),s(f,b),s(f,B),s(f,g),s(f,Q),s(f,F),v(n,k,C),v(n,x,C),v(n,ke,C),v(n,D,C),s(D,oe),s(D,Be),s(D,me),s(me,be),s(be,re),s(re,X),s(X,$),s(X,Ne),s(X,h),s(h,T),s(T,K),s(T,$e),s(T,et),s(T,tt),s(T,Me),s(T,nt),ln(ue,T,null),s(re,st),s(re,Te),s(D,it),s(D,ge),te.m(ge,null),v(n,qe,C),v(n,H,C),s(H,_e),s(H,at),s(H,ye),s(H,ot),s(H,Ae),s(Ae,xe),s(xe,j),j.checked=j.__value===e[2],s(xe,rt),s(H,ut),s(H,Re),s(Re,Ee),s(Ee,q),q.checked=q.__value===e[2],s(Ee,dt),s(H,ft),s(H,Ge),s(Ge,De),s(De,O),O.checked=O.__value===e[2],s(De,ct),s(H,pt),s(H,Se),s(Se,He),s(He,z),z.checked=z.__value===e[2],s(He,ht),s(H,mt),s(H,bt),s(H,vt),s(H,le),s(le,se),s(se,gt),s(le,_t),ln(de,le,null),s(le,wt),N&&N.m(le,null),v(n,ze,C),v(n,ie,C),s(ie,we),s(ie,It),s(ie,Ie),ne.m(Ie,null),v(n,Ue,C),v(n,ae,C),v(n,Pe,C),v(n,fe,C),ee=!0,kt||(Bt=[E($,"change",e[16]),E(h,"keydown",cn),E(h,"click",cn),E(h,"dragstart",J),E(h,"dragover",e[18]),E(h,"dragenter",e[19]),E(h,"dragleave",e[20]),E(h,"dragend",e[21]),E(h,"drop",e[22]),E(D,"keydown",void 0),E(D,"dragstart",J),E(D,"dragover",J),E(D,"dragenter",J),E(D,"dragleave",J),E(D,"dragend",J),E(D,"drop",J),E(j,"change",e[13]),E(j,"change",e[23]),E(q,"change",e[13]),E(q,"change",e[25]),E(O,"change",e[13]),E(O,"change",e[26]),E(z,"change",e[13]),E(z,"change",e[27]),E(se,"click",e[14])],kt=!0)},p(n,[C]){(!ee||C&64)&&Z(p,"active",U(n[6],ce+"/index.html")||U(n[6],"github.io/goat/")),(!ee||C&64)&&Z(m,"active",U(n[6],ce+"/index.html")||U(n[6],"github.io/goat/")),(!ee||C&64)&&Z(b,"active",U(n[6],"/goat.html")),(!ee||C&64)&&Z(g,"active",U(n[6],"/genemap")),(!ee||C&64)&&Z(F,"active",U(n[6],"/docs"));const Y={};!lt&&C&128&&(lt=!0,Y.show=n[7],Xt(()=>lt=!1)),ue.$set(Y),(!ee||C&1)&&Z(h,"is-dragover",n[0]===!0),We===(We=Mt(n))&&te?te.p(n,C):(te.d(1),te=We(n),te&&(te.c(),te.m(ge,null))),C&4&&(j.checked=j.__value===n[2]),C&4&&(q.checked=q.__value===n[2]),C&4&&(O.checked=O.__value===n[2]),C&4&&(z.checked=z.__value===n[2]),(!ee||C&386&&Oe!==(Oe=n[8]===!0||n[7]===!0||!(typeof n[1]=="object"&&n[1].ok===!0)))&&(se.disabled=Oe);const Fe={};!yt&&C&256&&(yt=!0,Fe.show=n[8],Xt(()=>yt=!1)),de.$set(Fe),n[4]?N?N.p(n,C):(N=dn(n),N.c(),N.m(le,null)):N&&(N.d(1),N=null),Ke===(Ke=jt(n))&&ne?ne.p(n,C):(ne.d(1),ne=Ke(n),ne&&(ne.c(),ne.m(Ie,null)))},i(n){ee||(sn(ue.$$.fragment,n),sn(de.$$.fragment,n),ee=!0)},o(n){an(ue.$$.fragment,n),an(de.$$.fragment,n),ee=!1},d(n){n&&(l(r),l(f),l(k),l(x),l(ke),l(D),l(qe),l(H),l(ze),l(ie),l(Ue),l(ae),l(Pe),l(fe)),l(t),on(ue),te.d(),on(de),N&&N.d(),ne.d(),Ct.r(),kt=!1,_n(Bt)}}}function J(e){e.preventDefault(),e.stopPropagation()}async function cn(e){document.getElementById("genelistFileDialog").click()}function qn(e,t,r){let f,a,p,o;Xe(e,xn,h=>r(29,f=h)),Xe(e,Gn,h=>r(6,a=h));const i=un(!1);Xe(e,i,h=>r(7,p=h));const m=un(!1);Xe(e,m,h=>r(8,o=h));let A=!1,c,b="retainFirstSucces",y,B,g;async function G(h){h.dataTransfer&&h.dataTransfer.files&&Q(h.dataTransfer.files[0])}async function Q(h){try{r(3,y=void 0),i.update(ve=>!0);const T=await Hn(h),K=Dn(T);r(1,c={genelist:T,symbols:K,filename:h.name,ok:!0,result:[],countGenes:T.length-1,countSuccess:0,done:!1,analytics:!1})}catch(T){console.error(T),r(3,y=T.message)}i.update(T=>!1)}function F(h){typeof c=="object"&&(r(1,c.result=[],c),r(1,c.countSuccess=0,c),r(1,c.done=!1,c))}async function L(h){if(c===void 0||typeof c!="object"||typeof c.done!="boolean"){r(4,B="nothing to do, genelist has not been loaded");return}try{r(4,B=void 0),m.update(T=>!0),r(1,c.done=!1,c),await kn(),r(1,c.result=await Vn(c.genelist,c.symbols,f,b),c),r(1,c.countSuccess=c.result.reduce((T,K)=>T+(K[K.length-1]===""?0:1),-1),c),r(1,c.done=!0,c),c.analytics!==!0&&(Rn("genemap"),r(1,c.analytics=!0,c))}catch(T){console.error(T),r(4,B=T.message)}m.update(T=>!1)}async function k(h){try{const T=En(),K=await Tn(c.result);let ve=c.filename.replace(/\.[a-zA-Z]{3,4}$/,"")+"__GOAT-online_genemap_"+T+".xlsx";ve.length>180&&(ve="GOAT-online_genemap_"+T+".xlsx"),An.saveAs(K,ve)}catch(T){console.error(T),r(5,g=T.message)}}const x=[[]],he=h=>{h.target.files&&Q(h.target.files[0])};function ke(h){p=h,i.set(p)}const D=h=>{J(h),r(0,A=!0)},oe=h=>{J(h),r(0,A=!0)},je=h=>{J(h),r(0,A=!1)},Be=h=>{J(h),r(0,A=!1)},me=h=>{J(h),r(0,A=!1),G(h)};function be(){b=this.__value,r(2,b)}function re(){b=this.__value,r(2,b)}function X(){b=this.__value,r(2,b)}function $(){b=this.__value,r(2,b)}function Ne(h){o=h,m.set(o)}return[A,c,b,y,B,g,a,p,o,i,m,G,Q,F,L,k,he,ke,D,oe,je,Be,me,be,x,re,X,$,Ne]}class Yn extends yn{constructor(t){super(),wn(this,t,qn,jn,bn,{})}}export{Yn as component};
