import{s as V,f as g,a as O,A as $,g as h,d as c,c as T,h as S,B as _,j as A,C as m,k as G,x as a,i as w,y as P,z as K}from"../chunks/scheduler.7144be00.js";import{S as J,i as Q}from"../chunks/index.3da70c46.js";import{i}from"../chunks/util.14f89131.js";import{p as U}from"../chunks/stores.ec8c6951.js";import{e as y}from"../chunks/singletons.0538ed95.js";function W(n){let v,q,t,u,f,D='<img src="./android-chrome-192x192.png" width="40" height="40" alt="GOAT"/>',M,o,F="Home",I,l,H="GOAT online",R,r,E="gene ID mapping",z,d,L="Documentation",C,b,j=`<h1 style="" class="svelte-1vmxgqy">GOAT online geneset enrichment analysis</h1> <div><h3 class="svelte-1vmxgqy">Identify enriched genesets in a preranked genelist generated by e.g. proteomics or gene
			expression studies using the GOAT algorithm.</h3></div>`,k,x,B=`<div style="padding-top: 50px"><h2 class="svelte-1vmxgqy">The GOAT algorithm for geneset enrichment analysis</h2> <div><p>The GOAT algorithm has not been published yet but a preprint is available, please cite it
				when using the early-access version of GOAT;
				<br/> <i>Koopmans, F. (2023). GOAT: efficient and robust identification of geneset enrichment.</i> <br/> <a href="https://doi.org/10.1101/2023.12.10.570979" target="_blank" rel="nofollow">https://doi.org/10.1101/2023.12.10.570979</a></p></div> <div style="margin-top: 25px;">GOAT features:
			<ul class="svelte-1vmxgqy"><li class="svelte-1vmxgqy">Sensitive; more significant genesets as compared to other methods</li> <li class="svelte-1vmxgqy">Accurate; geneset p-values are accurate under the null hypothesis</li> <li class="svelte-1vmxgqy">Fast; completes in seconds</li> <li class="svelte-1vmxgqy">No arbitrary parameters (unlike ORA, no fiddle parameters for &quot;foreground genes&quot;)</li> <li class="svelte-1vmxgqy">Bootstrapping approach always uses appropriate &quot;background set&quot; (unlike ORA)</li> <li class="svelte-1vmxgqy">Available as a R package and through this website (<i>GOAT online</i> in above menu)</li></ul> <span><i>*ORA: overrepresentation analysis (i.e. classical Fisher-exact or hypergeometric test)</i></span></div></div> <div style="padding-top: 50px"><h2 class="svelte-1vmxgqy">GOAT finds more significant genesets</h2> <div>GOAT identifies more significant GO terms as compared to GSEA and ORA across 6 omics studies.</div> <div style="margin-top: 25px;"><img src="barplot_signif_count.svg" width="800" height="450" alt="barplot significant geneset counts"/></div> <p style="padding: 0px 50px 0px 20px;">Differential expression analysis results from each study (panels) were extracted from
			supplementary data and subjected to 5 approaches (colors) for identifying overrepresented GO
			terms. GO MF, GO CC and GO BP represent the respective Gene Ontology domains Molecular
			Functions, Cellular Components and Biological Processes. The x-axis shows the number of
			significant genesets identified by each method after Bonferroni adjustment at α = 0.05
			and adjustment for testing 3 sources of genesets.</p></div> <div style="padding-top: 50px"><h2 class="svelte-1vmxgqy">GOAT p-values are accurate</h2> <div>In simulations that generate 200 thousand random genelists and genesets, from small to large,
			we find that geneset p-values estimated by GOAT are accurate under the null hypothesis.</div> <div style="margin-top: 25px;"><img src="null_simulations.svg" width="800" height="225" alt="GOAT p-values are accurate under the null hypothesis"/></div> <p style="padding: 0px 50px 0px 20px;">The y-axis shows the observed geneset p-value for a given p-value threshold on the x-axis
			(both on -log10 scale, p-values are shown as-is without multiple testing correction). For
			example, selecting a threshold of p = 0.01 (2 on -log10 scale) on the x-axis shows the
			proportion of observed genesets with p ≤ 0.01 on the y-axis. Since randomized genesets were
			used in these simulations, expected values are on the diagonal (dashed line).</p></div> <div style="margin-top: 100px"><h2 class="svelte-1vmxgqy">Description of the GOAT algorithm</h2> <p>In brief, the Geneset Ordinal Association Test (GOAT) is a parameter-free permutation-based
			algorithm for geneset enrichment analysis. It is easy to use via the online webtool or R
			package, computationally efficient and the resulting geneset p-values are well calibrated
			under the null hypothesis and invariant to geneset size. Application to various real-world
			proteomics and gene expression studies demonstrates that GOAT consistently identifies more
			significant Gene Ontology terms as compared to alternative methods.</p> <div><img src="goat_algorithm.png" alt="GOAT algorithm"/></div> <div style="padding: 0px 50px 0px 10px;"><ol><li class="svelte-1vmxgqy">Required input are a list of genes and their respective test statistics (p-value /
					effectsize), and a list of genesets obtained from GO or alternative resources.</li> <li class="svelte-1vmxgqy">Test statistics from the genelist are transformed to gene scores by rank(-pvalue)^2 or
					rank(effectsize)^2 depending on user-input, i.e. smaller p-values translate to higher gene
					scores. The result is a skewed gene score distribution.</li> <li class="svelte-1vmxgqy">For each geneset size N (number of genes), bootstrapping procedures generate a null
					distribution of geneset scores. This yields a skewed-normal distribution for small
					genesets and converges to a normal distribution for large genesets.</li> <li class="svelte-1vmxgqy">Geneset significance is determined for each geneset by comparing its score (mean of
					respective gene scores) against a null distribution of the same size (N).</li></ol></div></div>`;return{c(){v=g("meta"),q=O(),t=g("nav"),u=g("div"),f=g("a"),f.innerHTML=D,M=O(),o=g("a"),o.textContent=F,I=O(),l=g("a"),l.textContent=H,R=O(),r=g("a"),r.textContent=E,z=O(),d=g("a"),d.textContent=L,C=O(),b=g("div"),b.innerHTML=j,k=O(),x=g("div"),x.innerHTML=B,this.h()},l(e){const s=$("svelte-1b313dc",document.head);v=h(s,"META",{name:!0,content:!0}),s.forEach(c),q=T(e),t=h(e,"NAV",{});var p=S(t);u=h(p,"DIV",{style:!0});var N=S(u);f=h(N,"A",{href:!0,"data-svelte-h":!0}),_(f)!=="svelte-16w8u87"&&(f.innerHTML=D),N.forEach(c),M=T(p),o=h(p,"A",{href:!0,style:!0,"data-svelte-h":!0}),_(o)!=="svelte-1ec66ou"&&(o.textContent=F),I=T(p),l=h(p,"A",{href:!0,style:!0,"data-svelte-h":!0}),_(l)!=="svelte-2trhjx"&&(l.textContent=H),R=T(p),r=h(p,"A",{href:!0,style:!0,"data-svelte-h":!0}),_(r)!=="svelte-1cgo0ae"&&(r.textContent=E),z=T(p),d=h(p,"A",{href:!0,style:!0,"data-svelte-h":!0}),_(d)!=="svelte-amifqa"&&(d.textContent=L),p.forEach(c),C=T(e),b=h(e,"DIV",{class:!0,"data-svelte-h":!0}),_(b)!=="svelte-p77g5c"&&(b.innerHTML=j),k=T(e),x=h(e,"DIV",{style:!0,"data-svelte-h":!0}),_(x)!=="svelte-1y2idh4"&&(x.innerHTML=B),this.h()},h(){document.title="GOAT: Geneset Ordinal Association Test",A(v,"name","description"),A(v,"content","Geneset enrichment analysis for Geneset Ontology (GO) or KEGG pathways using the GOAT algorithm webtool. Online data analysis for your preranked genelist from e.g. proteomics or bulk/scRNAseq gene expression studies"),A(f,"href",y+"/"),m(f,"active",i(n[0],y+"/index.html")||i(n[0],"github.io/goat/")),G(u,"padding","4px"),G(u,"margin-left","20px"),A(o,"href",y+"/"),G(o,"margin-left","5px"),m(o,"active",i(n[0],y+"/index.html")||i(n[0],"github.io/goat/")),A(l,"href",y+"/goat.html"),G(l,"margin-left","40px"),m(l,"active",i(n[0],"/goat.html")),A(r,"href",y+"/genemap.html"),G(r,"margin-left","40px"),m(r,"active",i(n[0],"/genemap")),A(d,"href",y+"/docs.html"),G(d,"margin-left","40px"),m(d,"active",i(n[0],"/docs")),A(b,"class","divTitle svelte-1vmxgqy"),G(x,"background-color","white"),G(x,"padding","0px 50px 0px 50px")},m(e,s){a(document.head,v),w(e,q,s),w(e,t,s),a(t,u),a(u,f),a(t,M),a(t,o),a(t,I),a(t,l),a(t,R),a(t,r),a(t,z),a(t,d),w(e,C,s),w(e,b,s),w(e,k,s),w(e,x,s)},p(e,[s]){s&1&&m(f,"active",i(e[0],y+"/index.html")||i(e[0],"github.io/goat/")),s&1&&m(o,"active",i(e[0],y+"/index.html")||i(e[0],"github.io/goat/")),s&1&&m(l,"active",i(e[0],"/goat.html")),s&1&&m(r,"active",i(e[0],"/genemap")),s&1&&m(d,"active",i(e[0],"/docs"))},i:P,o:P,d(e){e&&(c(q),c(t),c(C),c(b),c(k),c(x)),c(v)}}}function X(n,v,q){let t;return K(n,U,u=>q(0,t=u)),[t]}class ie extends J{constructor(v){super(),Q(this,v,X,W,V,{})}}export{ie as component};
